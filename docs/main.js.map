{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data/TestData.ts","./src/app/data/dao/impl/CategoryDAOArray.ts","./src/app/data/dao/impl/PriorityDAOArray.ts","./src/app/data/dao/impl/TaskDAOArray.ts","./src/app/dialog/DialogMet.ts","./src/app/dialog/ModalActions.ts","./src/app/dialog/OperType.ts","./src/app/dialog/about/about.dialog.component.ts","./src/app/dialog/about/about.dialog.component.html","./src/app/dialog/confirm-dialog/confirm-dialog.component.ts","./src/app/dialog/confirm-dialog/confirm-dialog.component.html","./src/app/dialog/edit-category-dialog/edit-category-dialog.component.ts","./src/app/dialog/edit-category-dialog/edit-category-dialog.component.html","./src/app/dialog/edit-priority-dialog/edit-priority-dialog.component.ts","./src/app/dialog/edit-priority-dialog/edit-priority-dialog.component.html","./src/app/dialog/edit-task-dialog/edit-task-dialog.component.ts","./src/app/dialog/edit-task-dialog/edit-task-dialog.component.html","./src/app/dialog/me/me.component.ts","./src/app/dialog/me/me.component.html","./src/app/dialog/settings-dialog/settings-dialog.component.ts","./src/app/dialog/settings-dialog/settings-dialog.component.html","./src/app/model/Category.ts","./src/app/model/Priority.ts","./src/app/model/Task.ts","./src/app/pipe/task-date.pipe.ts","./src/app/service/data-handler.service.ts","./src/app/service/intro.service.ts","./src/app/views/categories/categories.component.ts","./src/app/views/categories/categories.component.html","./src/app/views/footer/footer.component.ts","./src/app/views/footer/footer.component.html","./src/app/views/header/header.component.ts","./src/app/views/header/header.component.html","./src/app/views/priorities/priorities.component.ts","./src/app/views/priorities/priorities.component.html","./src/app/views/stat/stat-card/stat-card.component.ts","./src/app/views/stat/stat-card/stat-card.component.html","./src/app/views/stat/stat.component.ts","./src/app/views/stat/stat.component.html","./src/app/views/tasks/tasks.component.ts","./src/app/views/tasks/tasks.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {Component, OnInit} from '@angular/core';\nimport {Category} from './model/Category';\nimport {Task} from './model/Task';\nimport {DataHandlerService} from './service/data-handler.service';\nimport {Priority} from \"./model/Priority\";\nimport {zip} from \"rxjs\";\nimport {concatMap, map} from \"rxjs/operators\";\nimport {IntroService} from \"./service/intro.service\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Component({\n    selector: 'app-root',\n    styles: ['nav { z-index: 0 !important; }'], // create new file for css\n    templateUrl: 'app.component.html'\n})\nexport class AppComponent implements OnInit {\n\n    public title = 'TestTODO';\n    public categoryMap = new Map<Category, number>();\n    public tasks: Task[];\n    public categories: Category[];\n    public priorities: Priority[];\n\n    public totalTasksCountInCategory: number;\n    public completedCountInCategory: number;\n    public uncompletedCountInCategory: number;\n    public uncompletedTotalTasksCount: number\n\n    public showStat: boolean = true;\n    public selectedCategory: Category = null;\n    public searchTasksText: string = '';\n    public searchCategoryText: string = '';\n    public priorityFilter: Priority;\n    public statusFilter: boolean;\n\n    public menuOpened: boolean;\n    public menuMode: any;\n    public menuPosition: any;\n    public showBackdrop: boolean;\n\n    public isMobile: boolean;\n    public isTablet: boolean;\n\n    constructor(public dataHandler: DataHandlerService,\n                public introService: IntroService,\n                public deviceService: DeviceDetectorService) {\n        this.isMobile = deviceService.isMobile();\n        this.isTablet = deviceService.isTablet();\n        this.showStat = true ? !this.isMobile : false;\n        this.setMenuValues()\n    }\n\n    public ngOnInit(): void {\n        this.dataHandler.getAllPriorities().subscribe((priorities) => this.priorities = priorities)\n        this.dataHandler.getAllCategories().subscribe((categories) => this.categories = categories);\n        this.fillCategories();\n        this.onSelectCategory(null);\n        if (!this.isMobile && !this.isTablet){\n            this.introService.startIntroJS(true);\n        }\n    }\n\n    public fillCategories() {\n        if (this.categoryMap) {\n            this.categoryMap.clear();\n            this.categories = this.categories.sort((a,b) => a.title.localeCompare(b.title));\n            this.categories.forEach(cat =>{\n                this.dataHandler.getUncompletedCountInCategory(cat).subscribe(count => this.categoryMap.set(cat, count))\n            });\n        }\n    }\n\n    public onSelectCategory(category: Category) {\n        this.selectedCategory = category;\n        this.updateTasksAndStat()\n    }\n    public onUpdateTask(task: Task): void {\n        this.dataHandler.updateTask(task).subscribe(() => {\n            this.fillCategories();\n            this.updateTasksAndStat();\n        })\n    }\n    public onDeleteTask(task: Task): void {\n        this.dataHandler.deleteTask(task.id).pipe(\n            concatMap(task => {\n                    return this.dataHandler.getUncompletedCountInCategory(task.category).pipe(map(count => {\n                        return ({t: task, count});\n                    }));\n                }\n            )).subscribe(result => {\n            const t = result.t as Task;\n            if(t.category){\n                this.categoryMap.set(t.category, result.count);\n            }\n            this.updateTasksAndStat();\n        });\n    }\n    public onDeleteCategory(category: Category){\n        this.dataHandler.deleteCategory(category.id).subscribe((cat: Category) => {\n            this.selectedCategory = null;\n            this.categoryMap.delete(cat);\n            this.onSearchCategory(this.searchCategoryText);\n            this.updateTasksAndStat()\n        });\n    }\n    public onUpdateCategory(category: Category): void {\n        this.dataHandler.updateCategory(category).subscribe(() => {\n            this.onSearchCategory(this.searchCategoryText);\n        });\n    }\n    public onSearchTasks(searchString: string): void {\n        this.searchTasksText = searchString;\n        this.updateTasksAndStat()\n    }\n    public onFilterTaskByStatus(status: boolean): void {\n        this.statusFilter = status;\n        this.updateTasksAndStat()\n    }\n    public onFilterTasksByPriority(priority: Priority) {\n        this.priorityFilter = priority;\n        this.updateTasksAndStat()\n    }\n    public updateTasks() {\n        this.dataHandler.searchTasks(\n            this.selectedCategory,\n            this.searchTasksText,\n            this.statusFilter,\n            this.priorityFilter\n        ).subscribe((tasks: Task[]) => {\n            this.tasks = tasks;\n        });\n    }\n\n    public onAddTask(task: Task) {\n        this.dataHandler.addTask(task).pipe(\n            concatMap(task => {\n                    return this.dataHandler.getUncompletedCountInCategory(task.category).pipe(map(count => {\n                        return ({t: task, count});\n                    }));\n                }\n            )).subscribe(result => {\n            const t = result.t as Task;\n            if (t.category) {\n                this.categoryMap.set(t.category, result.count);\n            }\n            this.updateTasksAndStat();\n        });\n    }\n    public onAddCategory(title: string) {\n        this.dataHandler.addCategory(title).subscribe(() => this.fillCategories());\n    }\n\n    public updateCategories() {\n        this.dataHandler.getAllCategories().subscribe(categories => this.categories = categories);\n        console.log(this.categories)\n    }\n    public onSearchCategory(title: string): void {\n        this.searchCategoryText = title;\n        this.dataHandler.searchCategories(title).subscribe(categories => {\n            this.categories = categories;\n            this.fillCategories();\n            });\n    }\n    public updateTasksAndStat(){\n        this.updateTasks();\n        this.updateStat();\n    }\n\n    public updateStat() {\n        zip(\n            this.dataHandler.getTotalCountInCategory(this.selectedCategory),\n            this.dataHandler.getCompletedCountInCategory(this.selectedCategory),\n            this.dataHandler.getUncompletedCountInCategory(this.selectedCategory),\n            this.dataHandler.getUncompletedTotalCount())\n            .subscribe( array => {\n                this.totalTasksCountInCategory = array[0];\n                this.completedCountInCategory = array[1];\n                this.uncompletedCountInCategory = array[2];\n                this.uncompletedTotalTasksCount = array[3];\n            })\n    }\n\n    public toggleStat(showStat: boolean) {\n        this.showStat = showStat;\n    }\n    public onClosedMenu(){\n        this.menuOpened = false;\n    }\n    public setMenuValues() {\n        this.menuPosition = 'left';\n        if(this.isMobile){\n            this.menuOpened = false;\n            this.menuMode = 'over';\n            this.showBackdrop = true;\n        } else {\n            this.menuOpened = true;\n            this.menuMode = 'push';\n            this.showBackdrop = false;\n        }\n    }\n    public toggleMenu(){\n        this.menuOpened = !this.menuOpened;\n    }\n\n}\n","\n<ng-sidebar-container style=\"height: 100vh\">\n\n    <ng-sidebar [opened]=\"menuOpened\"\n                [closeOnClickOutside]=\"false\"\n                [closeOnClickBackdrop]=\"true\"\n                [showBackdrop]=\"showBackdrop\"\n                [mode]=\"menuMode\"\n                [animate]=\"true\"\n                [position]=\"menuPosition\"\n                [autoFocus]=\"false\"\n                (onClosed)=\"onClosedMenu()\">\n        <div class=\"sidebar\"\n             data-color=\"purple\"\n             data-step=\"1\"\n             data-intro=\"Фильтрация задач, добавление/удаление/редактирование категорий\"\n             data-position=\"right\">\n            <app-categories\n                (selectCategory)=\"onSelectCategory($event)\"\n                (deleteCategory)=\"onDeleteCategory($event)\"\n                (updateCategory)=\"onUpdateCategory($event)\"\n                (addCategory)=\"onAddCategory($event)\"\n                (searchCategory)=\"onSearchCategory($event)\"\n                [categoryMap]=\"categoryMap\"\n                [uncompletedTotal]=\"uncompletedTotalTasksCount\"\n                [selectedCategory]=\"selectedCategory\"\n                [categories]=\"categories\">\n            </app-categories>\n        </div>\n    </ng-sidebar>\n\n    <div ng-sidebar-content>\n        <div class=\"main-panel\">\n\n            <nav class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\n                <app-header\n                        (toggleStat)=\"toggleStat($event)\"\n                        [categoryName]=\"selectedCategory ? selectedCategory.title: 'Все'\"\n                        [showStat]=\"showStat\"\n                        (toggleMenu)=\"toggleMenu()\"\n                ></app-header>\n            </nav>\n\n            <div class=\"content\">\n                <div class=\"container-fluid\">\n                    <app-stat\n                            [totalTasksInCategory]=\"totalTasksCountInCategory\"\n                            [completeTasksInCategory]=\"completedCountInCategory\"\n                            [uncompleteTasksInCategory]=\"uncompletedCountInCategory\"\n                            [showStat]=\"showStat\">\n                    </app-stat>\n\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div\n                                 data-step=\"4\"\n                                 data-intro=\"Список всех задач с фильтрацией\"\n                                 data-position=\"top\">\n                                <app-tasks (updateTask)=\"onUpdateTask($event)\"\n                                           (deleteTask)=\"onDeleteTask($event)\"\n                                           (selectCategory)=\"onSelectCategory($event)\"\n                                           (addTask)=\"onAddTask($event)\"\n\n                                           [selectedCategory]=\"selectedCategory\"\n                                           (filterByTitle)=\"onSearchTasks($event)\"\n                                           (filterByStatus)=\"onFilterTaskByStatus($event)\"\n                                           (filterByPriority)=\"onFilterTasksByPriority($event)\"\n\n                                           [tasks]=\"tasks\"\n                                           [priorities]=\"priorities\">\n                                </app-tasks>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <app-footer></app-footer>\n        </div>\n    </div>\n</ng-sidebar-container>\n\n\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {FormsModule} from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatOptionModule} from '@angular/material/core';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppComponent} from './app.component';\nimport {EditTaskDialogComponent} from './dialog/edit-task-dialog/edit-task-dialog.component';\nimport {CategoriesComponent} from './views/categories/categories.component';\nimport {TasksComponent} from './views/tasks/tasks.component';\nimport {ConfirmDialogComponent} from './dialog/confirm-dialog/confirm-dialog.component';\nimport {TaskDatePipe} from './pipe/task-date.pipe';\nimport {registerLocaleData} from '@angular/common';\nimport localeUa from '@angular/common/locales/ru-UA';\nimport {EditCategoryDialogComponent} from './dialog/edit-category-dialog/edit-category-dialog.component';\nimport { FooterComponent } from './views/footer/footer.component';\nimport { AboutDialogComponent } from './dialog/about/about.dialog.component';\nimport { HeaderComponent } from './views/header/header.component';\nimport { StatComponent } from './views/stat/stat.component';\nimport { StatCardComponent } from './views/stat/stat-card/stat-card.component';\nimport {ColorPickerModule} from \"ngx-color-picker\";\nimport { SettingsDialogComponent } from './dialog/settings-dialog/settings-dialog.component';\nimport { PrioritiesComponent } from './views/priorities/priorities.component';\nimport { EditPriorityDialogComponent } from './dialog/edit-priority-dialog/edit-priority-dialog.component';\nimport {SidebarModule} from \"ng-sidebar\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport { MeComponent } from './dialog/me/me.component';\n\n\nregisterLocaleData(localeUa);\n@NgModule({\n    declarations: [\n        AppComponent,\n        CategoriesComponent,\n        TasksComponent,\n        EditTaskDialogComponent,\n        ConfirmDialogComponent,\n        TaskDatePipe,\n        EditCategoryDialogComponent,\n        FooterComponent,\n        AboutDialogComponent,\n        HeaderComponent,\n        StatComponent,\n        StatCardComponent,\n        SettingsDialogComponent,\n        PrioritiesComponent,\n        EditPriorityDialogComponent,\n        MeComponent\n    ],\n    imports: [\n        BrowserModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        BrowserAnimationsModule,\n        MatDialogModule,\n        MatFormFieldModule,\n        FormsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatIconModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        ColorPickerModule,\n        SidebarModule.forRoot(),\n    ],\n    providers: [DeviceDetectorService],\n    entryComponents:[EditTaskDialogComponent,\n                    ConfirmDialogComponent,\n                    EditCategoryDialogComponent,\n                    AboutDialogComponent,\n                    SettingsDialogComponent,\n                    EditPriorityDialogComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// тестовые данные в виде массивов (заменяют таблицы БД)\n\nimport {Category} from '../model/Category';\nimport {Priority} from '../model/Priority';\nimport {Task} from '../model/Task';\n\nexport class TestData {\n    public static categories: Category[] = [\n        {id: 1, title: 'Работа'},\n        {id: 2, title: 'Семья'},\n        {id: 3, title: 'Учеба'},\n        {id: 4, title: 'Отдых'},\n        {id: 5, title: 'Спорт'},\n        {id: 6, title: 'Еда'},\n        {id: 7, title: 'Финансы'},\n        {id: 8, title: 'Гаджеты'},\n        {id: 9, title: 'Здоровье'},\n        {id: 10, title: 'Автомобиль'},\n        {id: 11, title: 'Ремонт'}\n    ];\n\n    public static priorities: Priority[] = [\n        {id: 1, title: 'Низкий', color: '#e5e5e5'},\n        {id: 2, title: 'Средний', color: '#85D1B2'},\n        {id: 3, title: 'Высокий', color: '#F1828D'},\n        {id: 4, title: 'Очень срочно!!', color: '#F1128D'}\n    ];\n\n    // не забывать - индексация приоритетов и категорий начинается с нуля\n    public static tasks: Task[] = [\n        {\n            id: 1,\n            title: 'Залить бензин полный бак',\n            priority: TestData.priorities[2],\n            completed: false,\n            category: TestData.categories[9],\n            date: new Date('2019-04-10')\n        },\n\n        {\n            id: 2,\n            title: 'Передать отчеты начальнику управления',\n            priority: TestData.priorities[0],\n            completed: false,\n            category: TestData.categories[0],\n            date: new Date('2019-04-11')\n        },\n\n        {\n            id: 3,\n            title: 'Убраться у себя в комнате, полить растения',\n            priority: TestData.priorities[2],\n            completed: true,\n            category: TestData.categories[1]\n        },\n\n        {\n            id: 4,\n            title: 'Сходить в парк с семьей, пригласить друзей',\n            priority: TestData.priorities[1],\n            completed: false,\n            category: TestData.categories[1],\n            date: new Date('2019-08-17')\n        },\n        {\n            id: 5,\n            title: 'Найти и выучить учебник по квантовой физике',\n            completed: false,\n            category: TestData.categories[2]\n        },\n        {\n            id: 6,\n            title: 'Сходить на семинар по программированию',\n            priority: TestData.priorities[1],\n            completed: true,\n            category: TestData.categories[2],\n            date: new Date('2019-06-11')\n        },\n\n        {\n            id: 7,\n            title: 'Найти билеты в Турцию, выбрать отель',\n            priority: TestData.priorities[2],\n            completed: false,\n            category: TestData.categories[3]\n        },\n        {\n            id: 8,\n            title: 'Приготовить ужин для всей семьи (семга с картошкой)',\n            completed: false,\n            category: TestData.categories[5]\n        },\n        {\n            id: 9,\n            title: 'Подтянуться 10 раз',\n            priority: TestData.priorities[2],\n            completed: false,\n            category: TestData.categories[4],\n            date: new Date('2019-03-12')\n        },\n        {\n            id: 10,\n            title: 'Пробежать 100 м',\n            priority: TestData.priorities[0],\n            completed: true,\n            category: TestData.categories[4]\n        },\n\n        {\n            id: 11,\n            title: 'Организовать детский праздник ',\n            completed: false\n        },\n\n        {\n            id: 12,\n            title: 'Сходить на лекцию \"Как научиться программировать на Java\"',\n            priority: TestData.priorities[1],\n            completed: false,\n            category: TestData.categories[2]\n        },\n        {\n            id: 13,\n            title: 'Купить продукты на неделю',\n            priority: TestData.priorities[2],\n            completed: false,\n            category: TestData.categories[5],\n            date: new Date('2019-05-11')\n        },\n\n        {\n            id: 14,\n            title: 'Провести собрание по поводу всех проектов',\n            completed: true,\n            category: TestData.categories[0]\n        },\n\n        {\n            id: 15,\n            title: 'Сдать экзамен по Java',\n            priority: TestData.priorities[2],\n            completed: true\n        },\n\n        {\n            id: 16,\n            title: 'Положить 100 000 р в банк на депозит',\n            priority: TestData.priorities[3],\n            completed: false,\n            category: TestData.categories[6]\n        },\n\n        {\n            id: 17,\n            title: 'Попросить аванс на работе',\n            priority: TestData.priorities[2],\n            completed: false,\n            category: TestData.categories[6]\n        },\n\n        {\n            id: 18,\n            title: 'Сдать анализы, проверить гемоглобин',\n            priority: TestData.priorities[3],\n            completed: false,\n            category: TestData.categories[8],\n            date: new Date('2020-12-11')\n        },\n\n        {\n            id: 19,\n            title: 'Сравнить новый айпад с самсунгом',\n            priority: TestData.priorities[0],\n            completed: false,\n            category: TestData.categories[7],\n            date: new Date('2019-10-11')\n        },\n\n        {\n            id: 20,\n            title: 'Футбол с сотрудниками',\n            priority: TestData.priorities[0],\n            completed: false,\n            category: TestData.categories[4],\n            date: new Date('2019-03-17')\n        }\n    ];\n}\n","import {Observable, of} from 'rxjs';\r\nimport {Category} from '../../../model/Category';\r\nimport {TestData} from '../../TestData';\r\nimport {ICategoryDao} from '../interface/CategoryDao';\r\n\r\nexport class CategoryDAOArray implements ICategoryDao {\r\n    public add(category: Category): Observable<Category> {\r\n\r\n        if (category.id === null || category.id === 0) {\r\n            category.id = this.getLastIdCategory();\r\n        }\r\n        TestData.categories.push(category);\r\n        return of(category);\r\n\r\n    }\r\n    public getLastIdCategory(): number {\r\n        return Math.max.apply(Math, TestData.categories.map(c => c.id)) + 1;\r\n    }\r\n\r\n    public delete(id: number): Observable<Category> {\r\n        TestData.tasks.forEach((task: any) => {\r\n            if (task.category && task.category.id === id) {\r\n                task.category = null;\r\n            }\r\n        });\r\n        const tmpCategory = TestData.categories.find((t: Category): boolean => t.id === id);\r\n        TestData.categories.splice(TestData.categories.indexOf(tmpCategory), 1);\r\n        return of(tmpCategory);\r\n    }\r\n\r\n    public get(id: number): Observable<Category> {\r\n        return undefined;\r\n    }\r\n\r\n    public getAll(): Observable<Category[]> {\r\n        return of(TestData.categories);\r\n    }\r\n\r\n    public search(title: string): Observable<Category[]> {\r\n        return of(TestData.categories.filter(\r\n            cat => cat.title.toUpperCase().includes(title.toUpperCase()))\r\n            .sort((c1,c2)=> c1.title.localeCompare(c2.title)));\r\n    }\r\n\r\n    public update(category: Category): Observable<Category> {\r\n        const tmpCategory = TestData.categories.find((t: Category): boolean => t.id === category.id);\r\n        TestData.categories.splice(TestData.categories.indexOf(tmpCategory), 1, category);\r\n        return of(tmpCategory);\r\n    }\r\n}\r\n","import {Observable, of} from 'rxjs';\r\nimport {Priority} from '../../../model/Priority';\r\nimport {TestData} from '../../TestData';\r\nimport {IPriorityDao} from '../interface/PriorityDao';\r\n\r\nexport class PriorityDAOArray implements IPriorityDao {\r\n    public get(id: number): Observable<Priority> {\r\n        return of(TestData.priorities.find(priority => priority.id === id));\r\n    }\r\n\r\n    public getAll(): Observable<Priority[]> {\r\n        return of(TestData.priorities);\r\n    }\r\n\r\n    public add(priority: Priority): Observable<Priority> {\r\n        if (priority.id === null || priority.id === 0) {\r\n            priority.id = this.getLastIdPriority();\r\n        }\r\n        TestData.priorities.push(priority);\r\n        return of(priority);\r\n    }\r\n\r\n    public delete(id: number): Observable<Priority> {\r\n        TestData.tasks.forEach(task => {\r\n            if (task.priority && task.priority.id === id) {\r\n                task.priority = null;\r\n            }\r\n        });\r\n\r\n        const tmpPriority = TestData.priorities.find(t => t.id === id); // удаляем по id\r\n        TestData.priorities.splice(TestData.priorities.indexOf(tmpPriority), 1);\r\n\r\n        return of(tmpPriority);\r\n    }\r\n\r\n    public update(priority: Priority): Observable<Priority> {\r\n        const tmp = TestData.priorities.find(t => t.id === priority.id); // обновляем по id\r\n        TestData.priorities.splice(TestData.priorities.indexOf(tmp), 1, priority);\r\n        return of(priority);\r\n    }\r\n    public getLastIdPriority(): number {\r\n        return Math.max.apply(Math, TestData.priorities.map(c => c.id)) + 1;\r\n    }\r\n}\r\n","import {Observable, of} from 'rxjs';\r\nimport {Category} from '../../../model/Category';\r\nimport {Priority} from '../../../model/Priority';\r\nimport {Task} from '../../../model/Task';\r\nimport {TestData} from '../../TestData';\r\nimport {ITaskDao} from '../interface/TaskDao';\r\n\r\nexport class TaskDAOArray implements ITaskDao {\r\n    public add(task: Task): Observable<Task> {\r\n        if (task.id === null || task.id === 0){\r\n            task.id = this.getLastIdTask();\r\n        }\r\n        TestData.tasks.push(task);\r\n        return of(task);\r\n    }\r\n    public getLastIdTask(): number {\r\n        return Math.max.apply(Math, TestData.tasks.map(task => task.id)) + 1;\r\n    }\r\n\r\n    public delete(id: number): Observable<Task> {\r\n        const taskTmp = TestData.tasks.find((t) => t.id === id);\r\n        TestData.tasks.splice(TestData.tasks.indexOf(taskTmp), 1);\r\n        return of(taskTmp);\r\n    }\r\n\r\n    public get(id: number): Observable<Task> {\r\n        return of(TestData.tasks.find((todo) => todo.id === id));\r\n    }\r\n\r\n    public getAll(): Observable<Task[]> {\r\n        return of(TestData.tasks);\r\n    }\r\n\r\n    // кол-во завершенных задач в заданной категории (если category === null, то для всех категорий)\r\n    public getCompletedCountInCategory(category: Category): Observable<number> {\r\n        return of(this.searchTasks(category, null, true, null).length);\r\n    }\r\n\r\n    // кол-во незавершенных задач в заданной категории (если category === null, то для всех категорий)\r\n    public getUncompletedCountInCategory(category: Category): Observable<number> {\r\n        return of(this.searchTasks(category, null, false, null).length);\r\n    }\r\n\r\n    // кол-во всех задач в заданной категории (если category === null, то для всех категорий)\r\n    public getTotalCountInCategory(category: Category): Observable<number> {\r\n        return of(this.searchTasks(category, null, null, null).length);\r\n    }\r\n\r\n    // кол-во всех задач в общем\r\n    public getTotalCount(): Observable<number> {\r\n        return of(TestData.tasks.length);\r\n    }\r\n\r\n    public search(category: Category, searchText: string, status: boolean, priority: Priority): Observable<Task[]> {\r\n        return of(this.searchTasks(category, searchText, status, priority));\r\n    }\r\n\r\n    public searchTasks(category: Category, searchText: string, status: boolean, priority: Priority): Task[] {\r\n        let allTasks = TestData.tasks;\r\n        if (status != null){\r\n            allTasks = allTasks.filter(task => task.completed === status)\r\n        }\r\n        if (category != null){\r\n            allTasks = allTasks.filter(task => task.category === category)\r\n        }\r\n        if (priority != null){\r\n            allTasks = allTasks.filter(task => task.priority === priority)\r\n        }\r\n        if (searchText != null){\r\n            allTasks = allTasks.filter(\r\n                task => task.title.toUpperCase().includes(searchText.toUpperCase())\r\n            );\r\n        }\r\n        return allTasks;\r\n    }\r\n    public update(T: Task): Observable<Task> {\r\n        const taskTmp = TestData.tasks.find((t) => t.id === T.id);\r\n        TestData.tasks.splice(TestData.tasks.indexOf(taskTmp), 1, T);\r\n        return of(T);\r\n    }\r\n\r\n    public getTotalCountCategory(category: Category): Observable<number> {\r\n        return undefined;\r\n    }\r\n}\r\n","import {MatDialogRef} from \"@angular/material/dialog\";\r\n\r\nexport class DialogMet<TDialogComponent> {\r\n\r\n    constructor(public dialogRef: MatDialogRef<TDialogComponent>) {\r\n    }\r\n\r\n    public onCancel(): void {\r\n        this.dialogRef.close(false);\r\n    }\r\n}\r\n","export enum ModalActions{\r\n    delete = 'delete',\r\n    activate = 'activate',\r\n    complete = 'complete'\r\n}\r\n","export enum OperType {\r\n    ADD,\r\n    EDIT\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-about-dialog',\n  templateUrl: './about.dialog.component.html',\n  styleUrls: ['./about.dialog.component.css']\n})\nexport class AboutDialogComponent implements OnInit{\n\n  public dialogTitle: string;\n  public message: string;\n\n  constructor(\n      public dialogRef: MatDialogRef<AboutDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: {\n        dialogTitle: string, message: string}\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.message = data.message;\n  }\n  public ngOnInit() {}\n\n  public onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<h1 mat-dialog-title>\n    {{dialogTitle}}\n</h1>\n<div mat-dialog-content>\n    <p>{{message}}</p>\n</div>\n\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">\n        Ok\n    </button>\n</div>\n","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {DialogMet} from \"../DialogMet\";\n\n@Component({\n  selector: 'app-confirm-dialog',\n  styleUrls: ['./confirm-dialog.component.css'],\n  templateUrl: './confirm-dialog.component.html',\n})\nexport class ConfirmDialogComponent extends DialogMet<ConfirmDialogComponent>{\n\n  public dialogTitle: string;\n  public message: string;\n\n  constructor(\n      public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: { dialogTitle: string, message: string },\n  ) {\n    super(dialogRef);\n    this.dialogTitle = data.dialogTitle;\n    this.message = data.message;\n  }\n\n  public onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n","\n<h1 mat-dialog-title>{{dialogTitle}}</h1>\n<div mat-dialog-content>\n    <p>{{message}}</p>\n</div>\n\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Ok</button>\n    <button mat-button (click)=\"onCancel()\">Отмена</button>\n</div>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\nimport {OperType} from '../OperType';\nimport {DialogMet} from \"../DialogMet\";\nimport {ModalActions} from \"../ModalActions\";\n\n@Component({\n    selector: 'app-edit-category-dialog',\n    templateUrl: './edit-category-dialog.component.html',\n    styleUrls: ['./edit-category-dialog.component.css']\n})\nexport class EditCategoryDialogComponent extends DialogMet<EditCategoryDialogComponent> implements OnInit {\n    public categoryTitle: string;\n    public dialogTitle: string;\n    public operType: OperType;\n\n    constructor(\n        public dialogRef: MatDialogRef<EditCategoryDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) private data: [string, string, OperType],\n        public dialog: MatDialog\n    ) {\n        super(dialogRef);\n    }\n\n    public ngOnInit(): void {\n        this.categoryTitle = this.data[0];\n        this.dialogTitle = this.data[1];\n        this.operType = this.data[2];\n    }\n    public onConfirm() {\n        this.dialogRef.close(this.categoryTitle);\n    }\n    public delete() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            maxWidth: '500px',\n            data: {\n                dialogTitle: 'Подтвердите действие',\n                message: `Вы действительно хотите удалить категорию: \"${this.categoryTitle}\"?`\n            },\n            autoFocus: false\n        });\n        dialogRef.afterClosed().subscribe((result):any => {\n            if (result) {\n                this.dialogRef.close(ModalActions.delete);\n            }\n        });\n    }\n    public canDelete(): boolean {\n        return this.operType === OperType.EDIT;\n    }\n}\n","<mat-dialog-content>\n  <p mat-dialog-title>{{dialogTitle}}</p>\n  <mat-form-field>\n    <mat-label> Название(15 символов)</mat-label>\n    <input #inputTitle\n      matInput maxlength=\"15\"\n      [(ngModel)]=\"categoryTitle\"\n      (keydown.enter)=\"onConfirm()\"/>\n    <button *ngIf=\"categoryTitle.trim().length > 0\"\n            class=\"clear-icon size25\"\n            mat-button  matSuffix mat-icon-button aria-label=\"Clear\"\n            (click)=\"categoryTitle= ''\">\n            <mat-icon>clear</mat-icon>\n    </button>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <div class=\"col-12 text-center\">\n    <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\"\n            [disabled]=\"inputTitle.value.trim().length===0\">Сохранить</button>\n    <button mat-raised-button (click)=\"onCancel()\">Отмена</button>\n  </div>\n\n  <div class=\"col-12 text-center\">\n    <button\n            *ngIf=\"canDelete()\"\n            mat-button\n            (click)=\"delete()\"\n            class=\"red\">\n      Удалить\n    </button>\n  </div>\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\nimport {OperType} from \"../OperType\";\nimport {DialogMet} from \"../DialogMet\";\nimport {ModalActions} from \"../ModalActions\";\n\n@Component({\n  selector: 'app-edit-priority-dialog',\n  templateUrl: './edit-priority-dialog.component.html',\n  styleUrls: ['./edit-priority-dialog.component.css']\n})\n\n// создание/редактирование категории\nexport class EditPriorityDialogComponent extends DialogMet<EditPriorityDialogComponent> implements OnInit {\n\n  public dialogTitle: string; // текст для диалогового окна\n  public priorityTitle: string; // текст для названия приоритета (при реактировании или добавлении)\n  public operType: OperType;\n\n  constructor(\n      public dialogRef: MatDialogRef<EditPriorityDialogComponent>, // // для возможности работы с текущим диалог. окном\n      @Inject(MAT_DIALOG_DATA) private data: [string, string, OperType], // данные, которые передали в диалоговое окно\n      public dialog: MatDialog // для открытия нового диалогового окна (из текущего) - например для подтверждения удаления\n  ) {\n    super(dialogRef);\n  }\n\n  ngOnInit() {\n    this.priorityTitle = this.data[0];\n    this.dialogTitle = this.data[1];\n    this.operType = this.data[2];\n  }\n\n  public onConfirm(): void {\n    this.dialogRef.close(this.priorityTitle);\n  }\n\n  // нажали Удалить\n  public delete(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: `Вы действительно хотите удалить приоритет: \"${this.priorityTitle}\"? (в задачи проставится '')`\n      },\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dialogRef.close(ModalActions.delete); // нажали удалить\n      }\n    });\n  }\n  public canDelete(): boolean {\n    return this.operType === OperType.EDIT;\n  }\n}\n","<mat-dialog-content>\n    <p mat-dialog-title>{{dialogTitle}}</p>\n    <mat-form-field>\n        <mat-label>Название (20 символов)</mat-label>\n        <input\n            #inputTitle\n            (keydown.enter)=\"onConfirm()\" [(ngModel)]=\"priorityTitle\"\n            matInput\n            maxlength=\"20\"/>\n\n        <button\n                (click)=\"priorityTitle= ''\"\n                *ngIf=\"priorityTitle.trim().length > 0\"\n                aria-label=\"Clear\" class=\"clear-icon size25\" mat-button mat-icon-button\n                matSuffix>\n            <mat-icon>clear</mat-icon>\n        </button>\n    </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div class=\"col-12 text-center\">\n        <button\n                (click)=\"onConfirm()\" [disabled]=\"inputTitle.value.trim().length===0\"\n                color=\"primary\"\n                mat-raised-button>\n            Сохранить\n        </button>\n        <button (click)=\"onCancel()\" mat-raised-button>Отмена</button>\n    </div>\n    <div class=\"col-12 text-center\">\n        <button (click)=\"delete()\"\n                *ngIf=\"canDelete()\"\n                class=\"red\" mat-button>\n            Удалить\n        </button>\n    </div>\n</mat-dialog-actions>\n\n\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Category} from '../../model/Category';\nimport {Priority} from '../../model/Priority';\nimport {Task} from '../../model/Task';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {DialogMet} from \"../DialogMet\";\nimport {ModalActions} from \"../ModalActions\";\n\n\n@Component({\n    selector: 'app-edit-task-dialog',\n    styleUrls: ['./edit-task-dialog.component.css'],\n    templateUrl: './edit-task-dialog.component.html'\n})\nexport class EditTaskDialogComponent extends DialogMet<EditTaskDialogComponent> implements OnInit {\n    public categories: Category[];\n    public priorities: Priority[];\n\n    public dialogTitle: string;\n    public task: Task;\n\n    public tmpTitle: string;\n    public tmpCategory: Category;\n    public tmpPriority: Priority;\n    public tmpDate: Date;\n\n    public isMobile: boolean;\n\n    constructor(\n        public dialogRef: MatDialogRef<EditTaskDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: [Task, string],\n        public dataHandler: DataHandlerService,\n        public dialog: MatDialog,\n        public deviceService: DeviceDetectorService\n    ) {\n        super(dialogRef);\n        this.isMobile = deviceService.isMobile();\n    }\n\n    public ngOnInit(): void {\n        this.task = this.data[0];\n        this.dialogTitle = this.data[1];\n\n        this.tmpTitle = this.task.title;\n        this.tmpCategory = this.task.category;\n        this.tmpPriority = this.task.priority;\n        this.tmpDate = this.task.date;\n\n        this.dataHandler.getAllCategories().subscribe((items) => (this.categories = items));\n        this.dataHandler.getAllPriorities().subscribe((items) => (this.priorities = items));\n    }\n\n    public onConfirm(): void {\n        this.task.title = this.tmpTitle;\n        this.task.category = this.tmpCategory;\n        this.task.priority = this.tmpPriority;\n        this.task.date = this.tmpDate;\n        this.dialogRef.close(this.task);\n    }\n\n    public delete(): void {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            maxWidth: '500px',\n            data: {\n                dialogTitle: 'Подтвердите действие',\n                message: `Вы действительно хотите удалить задачу: \"${this.task.title}\"?`\n            },\n            autoFocus: false\n        });\n        dialogRef.afterClosed().subscribe((result: boolean) => {\n            if (result) {\n                this.dialogRef.close(ModalActions.delete);\n            }\n        });\n    }\n\n    public complete(): void {\n        this.dialogRef.close(ModalActions.complete);\n    }\n\n    public activate(): void {\n        this.dialogRef.close(ModalActions.activate);\n    }\n}\n","<mat-dialog-content>\n    <p mat-dialog-title>{{dialogTitle}}</p>\n    <mat-form-field>\n        <mat-label>Название (обязательно)</mat-label>\n\n        <input #inputTitle matInput [(ngModel)]=\"tmpTitle\"\n               (keydown.enter)=\"onConfirm()\">\n        <button *ngIf=\"tmpTitle.trim().length > 0\"\n                mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n                (click)=\"tmpTitle=''\" class=\"size25\">\n            <mat-icon>clear</mat-icon>\n        </button>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Укажите категорию</mat-label>\n        <mat-select [(ngModel)]=\"tmpCategory\">\n            <mat-option [value]=\"null\">Без категории</mat-option>\n            <mat-option *ngFor=\"let cat of categories\" [value]=\"cat\">{{cat.title}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Укажите приоритет</mat-label>\n        <mat-select [(ngModel)]=\"tmpPriority\">\n            <mat-option [value]=\"null\">Без приоритета</mat-option>\n            <mat-option *ngFor=\"let pri of priorities\" [value]=\"pri\">{{pri.title}}</mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n        <input\n        matInput placeholder=\"Укажите срок выполнения\" #inputDate\n        readonly=\"true\"\n        [matDatepicker]=\"picker\"\n        [(ngModel)]=\"tmpDate\"\n        (click)=\"picker.open()\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <button *ngIf=\"inputDate.value.trim().length > 0\"\n                mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n                (click)=\"tmpDate = null\" class=\"size25\">\n                <mat-icon>clear</mat-icon>\n        </button>\n    </mat-form-field>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div class=\"col-md-5 col-12\" [ngClass]=\"{'text-center': isMobile, 'text-left': !isMobile}\">\n        <button mat-raised-button color=\"primary\"\n                (click)=\"onConfirm()\"\n                [disabled]=\"inputTitle.value.trim().length===0\"\n                class=\"edit-task_button\">\n            Сохранить\n        </button>\n        <button mat-raised-button (click)=\"onCancel()\" class=\"edit-task_button\">\n            Отмена\n        </button>\n    </div>\n    <div class=\"col-md-7 col-12 text-right\"\n         [ngClass]=\"{'text-center': isMobile, 'text-right': !isMobile}\">\n        <button mat-button class=\"green edit-task_button\" (click)=\"complete()\" *ngIf=\"!task.completed &&  task.id\" >\n            Завершить задачу\n        </button>\n        <button mat-button class=\"green edit-task_button\" (click)=\"activate()\" *ngIf=\"task.completed\">\n            Активировать\n        </button>\n        <button *ngIf=\"task.id\" mat-button class=\"red edit-task_button\" (click)=\"delete()\" >\n            Удалить задачу\n        </button>\n\n    </div>\n</mat-dialog-actions>\n","import { Component } from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {DialogMet} from \"../DialogMet\";\n\n@Component({\n  selector: 'app-me',\n  templateUrl: './me.component.html',\n  styleUrls: ['./me.component.css']\n})\nexport class MeComponent extends DialogMet<MeComponent>{\n\n\n  constructor ( public dialogRef: MatDialogRef<MeComponent>) {\n    super(dialogRef);\n  }\n\n\n\n\n\n\n}\n","\n<div class=\"text-right align-self-top\">\n    <button mat-icon-button  class=\"header-icon\" (click)=\"onCancel()\">\n        <mat-icon>close</mat-icon>\n    </button>\n</div>\n<p class=\"download_text\">Скачать резюме:</p>\n<div class=\"main_info\">\n    <div class=\"buttons_download\">\n        <button\n                color=\"primary\"\n                mat-raised-button>\n            PDF\n        </button>\n        <button\n                color=\"primary\"\n                mat-raised-button>\n            WORD\n        </button>\n    </div>\n</div>\n\n\n\n\n\n\n","import {Component, OnInit } from '@angular/core';\nimport {Priority} from \"../../model/Priority\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {DataHandlerService} from \"../../service/data-handler.service\";\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.css']\n})\nexport class SettingsDialogComponent implements OnInit {\n  public priorities: Priority[];\n\n  constructor(\n      public dialogRef: MatDialogRef<SettingsDialogComponent>,\n      public dataHandler: DataHandlerService\n  ) { }\n\n  ngOnInit( ) {\n    this.dataHandler.getAllPriorities().subscribe( priorities => this.priorities = priorities);\n  }\n  public onClose() {\n    this.dialogRef.close(false);\n  }\n\n  public onAddPriority(priority: Priority): void {\n    this.dataHandler.addPriority(priority).subscribe();\n  }\n\n  public onDeletePriority(priority: Priority): void {\n    this.dataHandler.deletePriority(priority.id).subscribe();\n  }\n\n  public onUpdatePriority(priority: Priority): void {\n    this.dataHandler.updatePriority(priority).subscribe();\n  }\n}\n","<mat-dialog-content>\n    <p mat-dialog-title class=\"settings-title with-subtitle\">Настройка приоритетов</p>\n    <p class=\"little subtitle\">* При изменении - цвет сразу будет отображаться в таблице</p>\n    <app-priorities (addPriority)=\"onAddPriority($event)\"\n                    (deletePriority)=\"onDeletePriority($event)\"\n                    (updatePriority)=\"onUpdatePriority($event)\"\n                    [priorities]=\"priorities\">\n    </app-priorities>\n</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onClose()\">Закрыть</button>\n</mat-dialog-actions>\n","export class Category {\n    public id: number;\n    public title: string;\n\n    public constructor(id: number, title: string) {\n        this.id = id;\n        this.title = title;\n    }\n}\n","export class Priority {\n    public id: number;\n    public title: string;\n    public color: string;\n\n    public constructor(id: number, title: string, color: string) {\n        this.id = id;\n        this.title = title;\n        this.color = color;\n    }\n}\n","import {Priority} from './Priority';\nimport {Category} from './Category';\n\n\nexport class Task {\n    public id: number;\n    public title: string;\n    public completed: boolean;\n    public priority?: Priority;\n    public category?: Category;\n    public date?: Date;\n\n   public constructor(id: number, title: string, completed: boolean, priority?: Priority, category?: Category, date?: Date) {\n        this.id = id;\n        this.title = title;\n        this.completed = completed;\n        this.priority = priority;\n        this.category = category;\n        this.date = date;\n    }\n}\n","import {DatePipe} from '@angular/common';\nimport {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'taskDate'\n})\nexport class TaskDatePipe extends DatePipe implements PipeTransform {\n    public transform(date: Date | string, format = 'mediumDate'): any {\n        if (date == null) {\n            return 'Без срока';\n        }\n        date = new Date(date);\n        const currentDate = new Date().getDate();\n        if (date.getDate() == currentDate) {\n            return 'Сегодня';\n        }\n        if (date.getDate() == currentDate - 1) {\n            return 'Вчера';\n        }\n        if (date.getDate() == currentDate + 1) {\n            return 'Завтра';\n        }\n        return new DatePipe('ru-UA').transform(date, format);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {CategoryDAOArray} from '../data/dao/impl/CategoryDAOArray';\nimport {PriorityDAOArray} from '../data/dao/impl/PriorityDAOArray';\nimport {TaskDAOArray} from '../data/dao/impl/TaskDAOArray';\nimport {TestData} from '../data/TestData';\nimport {Category} from '../model/Category';\nimport {Priority} from '../model/Priority';\nimport {Task} from '../model/Task';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataHandlerService {\n    public tasksSubject = new BehaviorSubject<Task[]>(TestData.tasks);\n    public categoriesSubject = new BehaviorSubject<Category[]>(TestData.categories);\n    public taskDaoArray = new TaskDAOArray();\n    public categoryDaoArray = new CategoryDAOArray();\n    public priorityDaoArray = new PriorityDAOArray();\n    public categoriesDaoArray = new CategoryDAOArray();\n\n    constructor() {\n        this.fillTasks();\n    }\n    public fillTasks(): void {\n        this.tasksSubject.next(TestData.tasks);\n    }\n    public fillTasksByCategory(category: Category): void {\n        const tasks = TestData.tasks.filter((task) => task.category === category);\n        this.tasksSubject.next(tasks);\n    }\n    public getAllTasks(): Observable<Task[]> {\n        return this.taskDaoArray.getAll();\n    }\n    public getAllCategories(): Observable<Category[]> {\n        return this.categoriesDaoArray.getAll();\n    }\n    public getAllPriorities(): Observable<Priority[]> {\n        return this.priorityDaoArray.getAll();\n    }\n    public searchTasks(category: Category, searchText: string, status: boolean, priority: Priority): Observable<Task[]> {\n        return this.taskDaoArray.search(category, searchText, status, priority);\n    }\n    public updateTask(task: Task): Observable<Task> {\n        return this.taskDaoArray.update(task);\n    }\n    public deleteTask(id: number): Observable<Task> {\n        return this.taskDaoArray.delete(id);\n    }\n    public updateCategory(category: Category): Observable<Category> {\n        return this.categoriesDaoArray.update(category);\n    }\n    public updatePriority(priority: Priority): Observable<Priority> {\n        return this.priorityDaoArray.update(priority);\n    }\n    public deleteCategory(id: number): Observable<Category> {\n        return this.categoriesDaoArray.delete(id);\n    }\n    public deletePriority(id: number): Observable<Priority> {\n        return this.priorityDaoArray.delete(id);\n    }\n    public addTask(task: Task): Observable<Task> {\n        return this.taskDaoArray.add(task);\n    }\n    public addCategory(title: string): Observable<Category> {\n        return this.categoryDaoArray.add(new Category(null, title));\n    }\n    public addPriority(priority: Priority): Observable<Priority> {\n        return this.priorityDaoArray.add(priority);\n    }\n    public searchCategories (title: string): Observable<Category[]>{\n        return this.categoriesDaoArray.search(title);\n    }\n    public getCompletedCountInCategory(category: Category): Observable<number>{\n        return this.taskDaoArray.getCompletedCountInCategory(category);\n    }\n    public getUncompletedTotalCount(): Observable<number> {\n        return this.taskDaoArray.getUncompletedCountInCategory(null);\n    }\n    public getUncompletedCountInCategory(category: Category):Observable<number>{\n        return this.taskDaoArray.getUncompletedCountInCategory(category);\n    }\n    public getTotalCountInCategory(category: Category): Observable<number> {\n        return this.taskDaoArray.getTotalCountInCategory(category);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport * as introJs from \"intro.js\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntroService {\n\n  public static INTRO_VIEWED_KEY = 'intro-viewed'; // ключ\n  public static INTRO_VIEWED_VALUE = 'done'; // значение\n\n  public introJS = introJs();\n\n  constructor() {\n  }\n\n  public startIntroJS(checkViewed: boolean) {\n    if (checkViewed === true && localStorage.getItem(IntroService.INTRO_VIEWED_KEY) === IntroService.INTRO_VIEWED_VALUE) {\n      return;\n    }\n    this.introJS.setOptions(\n        {\n          nextLabel: 'след. >',\n          prevLabel: '< пред.',\n          doneLabel: 'Выход',\n          exitOnEsc: true,\n          exitOnOverlayClick: false\n        });\n\n    this.introJS.start();\n    this.introJS.onexit((_ : any) => localStorage.setItem(IntroService.INTRO_VIEWED_KEY, IntroService.INTRO_VIEWED_VALUE));\n  }\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {EditCategoryDialogComponent} from '../../dialog/edit-category-dialog/edit-category-dialog.component';\nimport {Category} from '../../model/Category';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {OperType} from '../../dialog/OperType';\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {ModalActions} from \"../../dialog/ModalActions\";\n\n@Component({\n    selector: 'app-categories',\n    styleUrls: ['./categories.component.css'],\n    templateUrl: './categories.component.html'\n})\nexport class CategoriesComponent {\n    @Input()\n    public categories: Category[];\n    @Input()\n    public selectedCategory: Category;\n\n    @Input('categoryMap')\n    set setCategoryMap(categoryMap: Map<Category, number>) {\n        this.selectedCategoryMap = categoryMap;\n    }\n    @Input()\n    public uncompletedTotal: number;\n    @Output()\n    public selectCategory = new EventEmitter<Category>();\n    @Output()\n    public deleteCategory = new EventEmitter<Category>();\n    @Output()\n    public updateCategory = new EventEmitter<Category>();\n    @Output()\n    public addCategory = new EventEmitter<string>();\n    @Output()\n    public searchCategory = new EventEmitter<string>();\n    public indexMouseMove: number;\n    public showEditIconCategory: boolean;\n    public selectedCategoryMap: Map<Category, number>\n    public searchCategoryTitle: string;\n\n    public isMobile: boolean;\n    public isTablet: boolean;\n\n    constructor(public dataHandler: DataHandlerService,\n                public dialog: MatDialog,\n                public deviceService: DeviceDetectorService) {\n        this.isMobile = deviceService.isMobile();\n        this.isTablet = deviceService.isTablet();\n    }\n\n    // метод вызывается автоматически после инициализации компонента\n    public showTasksByCategory(category: Category): void {\n        if (this.selectedCategory === category) {\n            return;\n        }\n        this.selectedCategory = category;\n        this.selectCategory.emit(this.selectedCategory);\n    }\n\n    public showEditIcon(index: number): void {\n        this.indexMouseMove = index;\n    }\n    public openEditDialog(category: Category): void {\n        const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n            data: [category.title, 'Редактирование категорий', OperType.EDIT],\n            width: '400px'\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result === ModalActions.delete) {\n                this.deleteCategory.emit(category);\n                return;\n            }\n            if (typeof result === 'string') {\n                category.title = result as string;\n                this.updateCategory.emit(category);\n                return;\n            }\n        });\n    }\n    public openAddDialog(){\n        const dialogRef = this.dialog.open(EditCategoryDialogComponent, {data: ['', 'Добавление категории', OperType.ADD], width: '400px'});\n        dialogRef.afterClosed().subscribe(result => {\n            if (result){\n                this.addCategory.emit(result as string);\n            }\n        })\n    }\n    public search(){\n        if (this.searchCategoryTitle === null){\n            return;\n        }\n        this.searchCategory.emit(this.searchCategoryTitle);\n    }\n}\n","\n    <div id=\"categories\">\n        <div class=\"logo\">\n            <span class=\"nav-title\">Категории</span>\n            <span class=\"add-icon-area\">\n                <button class=\"add-icon\" mat-icon-button (click)=\"openAddDialog()\">\n                    <mat-icon>add</mat-icon>\n                </button>\n            </span>\n        </div>\n        <div class=\"sidebar-wrapper\">\n            <ul class=\"nav\">\n                <div class=\"search-category-area\">\n                    <mat-form-field class=\"example-full-width\">\n                        <input #inputSearchCategory\n                               (keydown.escape)=\"searchCategoryTitle = ''; search()\"\n                               (keyup)=\"search()\"\n                               [(ngModel)]=\"searchCategoryTitle\"\n                               matInput maxlength=\"256\" placeholder=\"Поиск категории\">\n                        <button (click)=\"searchCategoryTitle = ''; search()\"\n                                *ngIf=\"inputSearchCategory.value.trim().length > 0\" aria-label=\"Clear\"\n                                class=\"search-category-button size25 gray\"\n                                mat-button mat-icon-button matSuffix>\n                            <mat-icon>clear</mat-icon>\n                        </button>\n                    </mat-form-field>\n                </div>\n                <li class=\"nav-item category\" (click)=\"showTasksByCategory(null)\" [class.active]=\"selectedCategory\">\n                    <a class=\"nav-link pointer\">\n                        <span class=\"all-category-title\">Все</span>\n                        <span class=\"uncompleted-count\">{{uncompletedTotal}}</span>\n                    </a>\n                </li>\n                <div class=\"line\"></div>\n                <div *ngIf=\"categories.length === 0\">\n                    <p class=\"not-found\">Ничего не найдено</p>\n                </div>\n                <li (click)=\"showTasksByCategory(mapValue.key)\"\n                    *ngFor=\"let mapValue of selectedCategoryMap | keyvalue; let index = index\"\n                    [class.active]=\"mapValue.key === selectedCategory\"\n                    (click)=\"showTasksByCategory(mapValue.key)\"\n                    (mouseleave)=\"showEditIcon(null)\"\n                    (mouseenter)=\"showEditIcon(index)\"\n\n                    class=\"nav-item pointer\">\n                    <a class=\"nav-link\">\n                        <span class=\"category-title\">{{mapValue.key.title}}</span>\n                        <span class=\"edit-category-icon-area\">\n                            <mat-icon *ngIf=\"indexMouseMove === index || isMobile || isTablet\" (click)=\"$event.stopPropagation(); openEditDialog(mapValue.key)\"\n                                      class=\"edit-category-icon\"> edit\n                            </mat-icon>\n                        </span>\n                        <span class=\"uncompleted-count\"> {{mapValue.value}}</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"sidebar-background\"></div>\n    </div>\n\n","import {Component, OnInit} from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {AboutDialogComponent} from \"../../dialog/about/about.dialog.component\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {MeComponent} from \"../../dialog/me/me.component\";\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  public year: Date;\n  public git = 'https://github.com/olekprot';\n  public isMobile: boolean;\n\n\n  constructor(public dialog: MatDialog,\n              public deviceService: DeviceDetectorService) {\n      this.isMobile = deviceService.isMobile()\n  }\n\n  public ngOnInit() {\n    this.year = new Date();\n  }\n  public openAboutDialog(){\n    this.dialog.open(AboutDialogComponent,\n        {\n          autoFocus: false,\n          data: {\n            dialogTitle: 'Проект TODO-List',\n            message: 'Мой тестовый проект. Реализован простой ежедневник с задачами и категориями.'+\n                'Также добавлена статистика по выполнению задач.'\n          },\n          width: '400px'\n        });\n  }\n    public openAboutMe(){\n        this.dialog.open(MeComponent,\n            {\n                autoFocus: false,\n                width: '300px',\n            });\n    }\n}\n","\n<footer class=\"footer\"\n        data-step=\"5\"\n        data-intro=\"Информация про разработчика\"\n        data-position=\"top\"\n        [ngClass]=\"{'text-center': isMobile, 'container-fluid': !isMobile}\">\n    <div class=\"container-fluid\">\n                <nav class=\"float-left\">\n                    <ul>\n                        <li>\n                            <a (click)=\"openAboutMe()\" class=\"link\">Про меня</a>\n                        </li>\n                        <li>\n                            <a [href]=\"git\" class=\"link\">My GIT</a>\n                        </li>\n                        <li>\n                            <a (click)=\"openAboutDialog()\" class=\"link\">О приложении</a>\n                        </li>\n                    </ul>\n                </nav>\n        </div>\n</footer>\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {SettingsDialogComponent} from \"../../dialog/settings-dialog/settings-dialog.component\";\nimport {IntroService} from \"../../service/intro.service\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n  @Input()\n  public categoryName: string;\n  @Input()\n  public showStat: boolean;\n  @Output()\n  public toggleStat = new EventEmitter<boolean>();\n  @Output()\n  public toggleMenu = new EventEmitter<boolean>();\n\n  public isMobile:boolean;\n\n  constructor(public dialog: MatDialog,\n              public introService: IntroService,\n              public deviceDetector: DeviceDetectorService  ){\n    this.isMobile=deviceDetector.isMobile();\n  }\n\n  public onToggleStat() {\n    this.toggleStat.emit(!this.showStat);\n  }\n  public showSettings(): void {\n    this.dialog.open(SettingsDialogComponent, // delete const dialogRef\n        {\n          autoFocus: false,\n          width: '500px'\n        });\n    }\n    public showIntroHelp() {\n      this.introService.startIntroJS(false);\n    }\n    public onToggleMenu() {\n      this.toggleMenu.emit();\n    }\n}\n","\n    <div class=\"row settings\"\n         data-step=\"2\"\n         data-intro=\"Панель управления приложением\"\n         data-position=\"top\">\n        <div class=\"col-8 text-left align-self-top\">\n            <button mat-icon-button type=\"button\" (click)=\"onToggleMenu()\">\n                <mat-icon>menu</mat-icon>\n            </button>\n            <p class=\"navbar-brand\">{{categoryName}}</p>\n            <p class=\"link navbar-brand\" (click)=\"onToggleStat()\" *ngIf=\"showStat && !isMobile\">Скрыть статистику</p>\n            <p class=\"link navbar-brand\" (click)=\"onToggleStat()\" *ngIf=\"!showStat && !isMobile\">Показать статистику</p>\n        </div>\n\n        <div class=\"col-2 text-right align-self-top\" *ngIf=\"!isMobile\" >\n            <button mat-icon-button  class=\"header-icon\">\n                <mat-icon>login</mat-icon>\n            </button>\n            <button mat-icon-button   class=\"header-icon\">\n                <mat-icon>logout</mat-icon>\n            </button>\n        </div>\n\n        <div class=\"col-2 text-right align-self-top\">\n            <button mat-icon-button  class=\"header-icon\" (click)=\"showSettings()\">\n                <mat-icon>settings</mat-icon>\n            </button>\n            <button mat-icon-button *ngIf=\"!isMobile\" class=\"header-icon\" (click)=\"showIntroHelp()\">\n                <mat-icon>help</mat-icon>\n            </button>\n        </div>\n    </div>\n\n\n\n\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Priority} from '../../model/Priority';\nimport {EditCategoryDialogComponent} from '../../dialog/edit-category-dialog/edit-category-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../../dialog/confirm-dialog/confirm-dialog.component';\nimport {EditPriorityDialogComponent} from \"../../dialog/edit-priority-dialog/edit-priority-dialog.component\";\nimport {OperType} from \"../../dialog/OperType\";\nimport {ModalActions} from \"../../dialog/ModalActions\";\n\n@Component({\n  selector: 'app-priorities',\n  templateUrl: './priorities.component.html',\n  styleUrls: ['./priorities.component.css']\n})\nexport class PrioritiesComponent {\n\n  static defaultColor = '#fff';\n\n  @Output()\n  public deletePriority = new EventEmitter<Priority>();\n  @Output()\n  public updatePriority = new EventEmitter<Priority>();\n  @Output()\n  public addPriority = new EventEmitter<Priority>();\n  @Input()\n  public priorities: Priority[];\n\n\n  constructor(public dialog: MatDialog) {\n  }\n\n  public delete(priority: Priority): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: `Вы действительно хотите удалить категорию: \"${priority.title}\"? (задачам проставится значение 'Без приоритета')`\n      },\n      autoFocus: false\n    });\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result) {\n        this.deletePriority.emit(priority);\n      }\n    });\n  }\n  public onAddPriority(): void {\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: ['', 'Добавление приоритета', OperType.ADD],\n      width: '400px'\n    });\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result) {\n        const newPriority = new Priority(null, result as string, PrioritiesComponent.defaultColor);\n        this.addPriority.emit(newPriority);\n      }\n    });\n  }\n\n  public onEditPriority(priority: Priority): void {\n    const dialogRef = this.dialog.open(EditPriorityDialogComponent,\n        {data: [priority.title, 'Редактирование приоритета', OperType.EDIT]});\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      if (result === ModalActions.delete) {\n        this.deletePriority.emit(priority);\n        return;\n      }\n      if (result) {\n        priority.title = result as string;\n        this.updatePriority.emit(priority);\n        return;\n      }\n    });\n  }\n}\n","<div *ngFor=\"let priority of priorities, let index = index\" class=\"vertical-middle priorities\">\n    <div class=\"row align-self-baseline\">\n        <div class=\"col-7 \">\n            <a (click)=\"onEditPriority(priority)\" class=\"pointer\"> {{priority.title}}</a>\n        </div>\n        <div class=\"col-2 text-right\">\n            <span [(colorPicker)]=\"priority.color\" [style.background]=\"priority.color\" class=\"color-circle\"></span>\n        </div>\n        <div class=\"col-1 text-left\">\n            <p (click)=\"delete(priority)\" class=\"pointer gray\">\n                <mat-icon>delete</mat-icon>\n            </p>\n        </div>\n        <div class=\"col-1 text-left\">\n            <p (click)=\"onEditPriority(priority)\" class=\"pointer gray\">\n                <mat-icon>edit</mat-icon>\n            </p>\n        </div>\n    </div>\n</div>\n\n<p (click)=\"onAddPriority()\" class=\"link little\">Добавить приоритет</p>\n\n\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-stat-card',\n  templateUrl: './stat-card.component.html',\n  styleUrls: ['./stat-card.component.css']\n})\nexport class StatCardComponent {\n\n  @Input()\n  public completed: boolean = false;\n  @Input()\n  public iconName:string\n  @Input()\n  public count1: number | string;\n  @Input()\n  public countTotal: number | string;\n  @Input()\n  public title: string;\n}\n","<div class=\"card card-stats\" [ngClass]=\"{'completed-card': completed}\">\n    <div class=\"card-header card-header-warning card-header-icon\">\n        <div class=\"card-icon\">\n            <i class=\"material-icons\">{{iconName}}</i>\n        </div>\n        <p class=\"card-category\"></p>\n        <h3 class=\"card-title\"> {{count1}}\n            <span *ngIf=\"countTotal\">из {{countTotal}}</span>\n        </h3>\n    </div>\n\n    <div class=\"card-footer\">\n        <div class=\"stats\">\n            <p class=\"stat-card-title\">{{title}}</p>\n        </div>\n    </div>\n</div>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-stat',\n  templateUrl: './stat.component.html',\n  styleUrls: ['./stat.component.css']\n})\nexport class StatComponent {\n  @Input()\n  public totalTasksInCategory: number; // общее кол-во задач в категории\n  @Input()\n  public completeTasksInCategory: number; // кол-во решенных задач в категории\n  @Input()\n  public uncompleteTasksInCategory: number; // кол-во нерешенных задач в категории\n  @Input()\n  public showStat: boolean;\n}\n","<div *ngIf=\"showStat\"\n     data-step=\"3\"\n     data-intro=\"Статистика выполнения задач\"\n     data-position=\"top\">\n    <div class=\"row\">\n        <app-stat-card\n                class='col-lg-3 col-md-6 col-sm-6'\n                title=\"Завершенные задачи\"\n                iconName=\"done\"\n                [count1]=\"completeTasksInCategory\"\n                [countTotal]=\"totalTasksInCategory\"\n                [completed]=\"true\">\n        </app-stat-card>\n        <app-stat-card\n                class='col-lg-3 col-md-6 col-sm-6'\n                title=\"Незавершенные задачи\"\n                iconName=\"thumb_down_alt\"\n                [count1]=\"uncompleteTasksInCategory\"\n                [countTotal]=\"totalTasksInCategory\">\n        </app-stat-card>\n        <app-stat-card\n                class='col-lg-3 col-md-6 col-sm-6 completed-card'\n                title=\"Процент завершенных задач\"\n                iconName=\"poll\"\n                [count1]=\"completeTasksInCategory ? (completeTasksInCategory/totalTasksInCategory | percent) : '0 %'\"\n                [completed]=\"true\">\n        </app-stat-card>\n        <app-stat-card\n                class='col-lg-3 col-md-6 col-sm-6'\n                title=\"Процент незавершенных задач\"\n                iconName=\"thumb_down_alt\"\n                [count1]=\"uncompleteTasksInCategory ? (uncompleteTasksInCategory/totalTasksInCategory | percent) : '0 %'\">\n        </app-stat-card>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {ConfirmDialogComponent} from '../../dialog/confirm-dialog/confirm-dialog.component';\nimport {EditTaskDialogComponent} from '../../dialog/edit-task-dialog/edit-task-dialog.component';\nimport {Category} from '../../model/Category';\nimport {Task} from '../../model/Task';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {Priority} from \"../../model/Priority\";\nimport {DeviceDetectorService} from \"ngx-device-detector\";\nimport {ModalActions} from \"../../dialog/ModalActions\";\n\n@Component({\n    selector: 'app-tasks',\n    styleUrls: ['./tasks.component.css'],\n    templateUrl: './tasks.component.html'\n})\nexport class TasksComponent implements OnInit {\n    // поля для таблицы (те, что отображают данные из задачи - должны совпадать с названиями переменных класса)\n    public displayedColumns: string[] = ['color', 'id', 'title', 'date', 'priority', 'category', 'operations', 'select'];\n    public dataSource: MatTableDataSource<Task>; // контейнер - источник данных для таблицы\n\n    @ViewChild(MatPaginator) private paginator: MatPaginator;\n    @ViewChild(MatSort) private sort: MatSort;\n    public tasks: Task[];\n    public priorities: Priority[];\n    public searchTaskText: string;\n    public selectedStatusFilter: boolean = null;\n    public selectedPriorityFilter: Priority = null;\n\n\n    @Input('tasks')\n    public set setTasks(tasks: Task[]) {\n        this.tasks = tasks;\n        this.fillTable();\n    }\n    @Input('priorities')\n    set setPriorities(priorities: Priority[]) {\n        this.priorities = priorities;\n    }\n    @Input()\n    public selectedCategory: Category;\n\n    @Output()\n    public deleteTask = new EventEmitter<Task>();\n    @Output()\n    public updateTask = new EventEmitter<Task>();\n    @Output()\n    public selectCategory = new EventEmitter<Category>();\n    @Output()\n    public filterByTitle = new EventEmitter<string>();\n    @Output()\n    public filterByStatus = new EventEmitter<boolean>();\n    @Output()\n    filterByPriority = new EventEmitter<Priority>();\n    @Output()\n    public addTask = new EventEmitter<Task>();\n\n    public isMobile:boolean;\n\n    constructor(public dataHandler: DataHandlerService,\n                public dialog: MatDialog,\n                public deviceService:DeviceDetectorService) {\n        this.isMobile = this.deviceService.isMobile();\n    }\n\n    public ngOnInit(): void {\n        this.dataSource = new MatTableDataSource();\n        this.onSelectCategory(null);\n    }\n\n    public getPriorityColor(task: Task): string {\n        // цвет завершенной задачи\n        if (task.completed) {\n            return '#F8F9FA'; // TODO вынести цвета в константы (magic strings, magic numbers)\n        }\n        if (task.priority && task.priority.color) {\n            return task.priority.color;\n        }\n\n        return '#fff'; // TODO вынести цвета в константы (magic strings, magic numbers)\n    }\n\n    public fillTable(): void {\n        if (!this.dataSource) {\n            return;\n        }\n        this.dataSource.data = this.tasks; // обновить источник данных (т.к. данные массива tasks обновились)\n        this.addTableObjects();\n\n        // @ts-ignore - показывает ошибку для типа даты, но так работает, т.к. можно возвращать любой тип\n        this.dataSource.sortingDataAccessor = (task, colName) => {\n            // по каким полям выполнять сортировку для каждого столбца\n            switch (colName) {\n                case 'priority': {\n                    return task.priority ? task.priority.id : null;\n                }\n                case 'category': {\n                    return task.category ? task.category.title : null;\n                }\n                case 'date': {\n                    return task.date ? task.date : null;\n                }\n                case 'title': {\n                    return task.title;\n                }\n            }\n        };\n    }\n\n    public addTableObjects(): void {\n        this.dataSource.sort = this.sort; // компонент для сортировки данных (если необходимо)\n        this.dataSource.paginator = this.paginator; // обновить компонент постраничности (кол-во записей, страниц)\n    }\n\n    public onClickTask(task: Task): void {\n        this.updateTask.emit(task);\n    }\n\n    public openEditTaskDialog(task: Task): void {\n        const dialogRef = this.dialog.open(EditTaskDialogComponent, {\n            autoFocus: false,\n            data: [task, 'Редактировать задачи']\n        });\n\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result === ModalActions.delete) {\n                this.deleteTask.emit(task);\n                return;\n            }\n            if (result === ModalActions.complete) {\n                task.completed = true;\n                this.updateTask.emit(task);\n            }\n            if (result === ModalActions.activate) {\n                task.completed = false;\n                this.updateTask.emit(task);\n                return;\n            }\n            if (result as Task) {\n                this.updateTask.emit(task);\n                return;\n            }\n        });\n    }\n    public openDeleteDialog(task: Task): void {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            maxWidth: '500px',\n            data: {dialogTitle: 'Подтвердите действие', message: `Вы действительно хотите удалить задачу: \"${task.title}\"?`},\n            autoFocus: false\n        });\n        dialogRef.afterClosed().subscribe((result) => {\n            if (result) {\n                this.deleteTask.emit(task);\n            }\n        });\n    }\n    public onToggleStatus(task: Task): void {\n        task.completed = !task.completed;\n        this.updateTask.emit(task);\n    }\n    public onSelectCategory(category: any) {\n        this.selectCategory.emit(category as Category);\n    }\n    public onFilterByTitle(): void{\n        this.filterByTitle.emit(this.searchTaskText);\n    }\n    public onFilterByStatus(value: boolean) {\n        if (value !== this.selectedStatusFilter){\n            this.selectedStatusFilter = value;\n            this.filterByStatus.emit(this.selectedStatusFilter);\n        }\n    }\n    public onFilterByPriority(value: Priority) {\n        if (value !== this.selectedPriorityFilter) {\n            this.selectedPriorityFilter = value;\n            this.filterByPriority.emit(this.selectedPriorityFilter);\n        }\n    }\n    public openAddTaskDialog(): void {\n        const task = new Task(null,'',false,null, this.selectedCategory);\n        const dialogRef = this.dialog.open(EditTaskDialogComponent, {data:[task, 'Добавление задачи']});\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.addTask.emit(task);\n            }\n        })\n    }\n    public getMobilePriorityBgColor(task: Task) {\n        if (task.priority != null && !task.completed) {\n            return task.priority.color;\n        }\n        return 'none';\n    }\n}\n","\n<div class=\"row\">\n    <div class=\"col-md-3 col-sm-12\">\n        <mat-form-field>\n            <input #filterInput\n                    (keydown.escape)=\"searchTaskText = ''; onFilterByTitle()\"\n                    (keyup)=\"onFilterByTitle()\"\n                    [(ngModel)]=\"searchTaskText\"\n                    matInput\n                    placeholder=\"Поиск в текущей категории\">\n            <button (click)=\"searchTaskText = ''; onFilterByTitle()\"\n                    *ngIf=\"filterInput.value.trim().length > 0\"\n                    aria-label=\"Clear\" class=\"clear-icon size25 gray\" mat-button\n                    mat-icon-button\n                    matSuffix>\n                <mat-icon>clear</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"col-md-3 col-sm-12\">\n        <mat-form-field>\n            <mat-select #statusFilter (valueChange)=\"onFilterByStatus($event)\"\n                        [value]=\"selectedStatusFilter\" placeholder=\"Фильтр по статусу\">\n                <mat-option [value]=\"null\">Все статусы</mat-option>\n                <mat-option [value]=\"true\">Завершенные задачи</mat-option>\n                <mat-option [value]=\"false\">Незавершенные задачи</mat-option>\n            </mat-select>\n\n            <button (click)=\"$event.stopPropagation(); onFilterByStatus(null)\"\n                    *ngIf=\"selectedStatusFilter != null\"\n                    aria-label=\"Clear\" class=\"clear-icon size25 gray\" mat-button\n                    mat-icon-button\n                    matSuffix>\n                <mat-icon>clear</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"col-md-3 col-sm-12\">\n        <mat-form-field>\n            <mat-select [value]=\"selectedPriorityFilter\" (valueChange)=\"onFilterByPriority($event)\"\n                        placeholder=\"Фильтр по приоритетам\">\n                <mat-option [value]=\"null\">Все приоритеты</mat-option>\n                <mat-option *ngFor=\"let priority of priorities\" [value]=\"priority\">{{priority.title}}</mat-option>\n            </mat-select>\n            <button\n                    *ngIf=\"selectedPriorityFilter != null\"\n                    class=\"clear-icon size25 gray\"\n                    matSuffix mat-icon-button mat-button\n                    aria-label=\"Clear\"\n                    (click)=\"$event.stopPropagation(); onFilterByPriority(null); \">\n                <mat-icon>clear</mat-icon>\n            </button>\n        </mat-form-field>\n    </div>\n    <div class=\"col-md-3 col-sm-12 text-right\">\n        <div class=\"row padding-top-10\">\n            <div class=\"text-left col-6\">\n                <button class=\"nopadding-left\"\n                        *ngIf=\"selectedStatusFilter != null || selectedPriorityFilter != null || (searchTaskText != null && searchTaskText.trim() != '') \"\n                        matSuffix mat-button\n                        aria-label=\"Clear\"\n                        (click)=\"$event.stopPropagation(); onFilterByStatus(null); onFilterByPriority(null); searchTaskText = ''; onFilterByTitle()\">\n                    Сбросить\n                </button>\n            </div>\n            <div class=\"text-right col-6\">\n                <button mat-raised-button color=\"primary\" (click)=\"openAddTaskDialog()\">Добавить</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-12 task-list\">\n        <div class=\"card\" *ngIf=\"!isMobile\">\n            <div class=\"card-header card-header-warning\">\n                <h4 class=\"card-title\">Список задач</h4>\n            </div>\n            <div class=\"card-body table-responsive\" *ngIf='tasks && tasks.length > 0'>\n                <table [dataSource]=\"dataSource\" mat-table matSort>\n                    <!--  цвет приоритета  -->\n                    <ng-container matColumnDef=\"color\">\n                        <th *matHeaderCellDef mat-header-cell></th>\n                        <td *matCellDef=\"let task\" [style.background-color]=\"getPriorityColor(task)\" class=\"col-color\"\n                            mat-cell></td>\n                    </ng-container>\n\n                    <!-- нумерация-->\n                    <ng-container matColumnDef=\"id\">\n                        <th *matHeaderCellDef mat-header-cell></th>\n                        <td *matCellDef=\"let index = index;\" class=\"col-id\" mat-cell>\n                            {{index + 1}}\n                        </td>\n                    </ng-container>\n\n                    <!-- название задачи-->\n                    <ng-container matColumnDef=\"title\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> Название</th>\n                        <td *matCellDef=\"let task\" [class.completed]=\"task.completed\" class=\"col-title pointer\" mat-cell\n                            (click)= \"openEditTaskDialog(task)\">\n                            {{task.title}}\n                        </td>\n                    </ng-container>\n\n                    <!--дата выполнения-->\n                    <ng-container matColumnDef=\"date\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> Срок</th>\n                        <td *matCellDef=\"let task\" [ngClass]=\"{'completed': task.completed, 'novalue': task.date === null}\"\n                            class=\"col-date\"\n                            mat-cell>\n                            {{task.date | taskDate}}\n                        </td>\n                    </ng-container>\n\n                    <!--приоритет-->\n                    <ng-container matColumnDef=\"priority\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header>Приоритет</th>\n                        <td *matCellDef=\"let task\" class=\"col-priority\"\n                            [ngClass]=\"{'completed': task.completed, 'novalue': task.priority === null}\"\n                            mat-cell>\n                            {{task.priority ? task.priority.title : \"Без приоритета\"}}\n                        </td>\n                    </ng-container>\n\n                    <!--категория-->\n                    <ng-container matColumnDef=\"category\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header>Категория</th>\n                        <td *matCellDef=\"let task\" class=\"col-category\"\n                            [ngClass]=\"{'completed': task.completed, 'novalue': task.category === null, 'link': !task.completed && task.category}\"\n                            (click)=\"!task.completed && task.category && onSelectCategory(task.category)\"\n                            mat-cell>\n                            {{task.category ? task.category.title : \"Без категории\"}}\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"operations\">\n                        <th mat-header-cell *matHeaderCellDef></th>\n                        <td class=\"col-operations\" mat-cell *matCellDef=\"let task\" [class.completed]=\"task.completed\">\n                            <button mat-icon-button (click)=\"openDeleteDialog(task)\" class=\"delete-icon\">\n                                <mat-icon aria-hidden=\"false\">delete</mat-icon>\n                            </button>\n                            <button mat-icon-button (click)=\"openEditTaskDialog(task)\" class=\"edit-icon\">\n                                <mat-icon aria-hidden=\"false\">edit</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n                    <ng-container matColumnDef=\"select\">\n                        <th mat-header-cell *matHeaderCellDef></th>\n                        <td class=\"col-select text-right\" mat-cell *matCellDef=\"let task\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                          (change)=\"$event ? onToggleStatus(task) : null\"\n                                          [checked]=\"task.completed\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n\n                    <!--  заголовок таблицы-->\n                    <tr *matHeaderRowDef=\"displayedColumns; \" mat-header-row></tr>\n\n                    <!--  строки таблицы - набор строк из тегов td (порядок указывается в переменной displayedColumns) -->\n                    <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n                </table>\n                <mat-paginator [pageSizeOptions]=\"[10, 20, 50, 100]\" showFirstLastButtons></mat-paginator>\n            </div>\n            <div *ngIf=\"tasks && tasks.length === 0\">\n                <p class=\"not_found\">Ничего не найдено</p>\n            </div>\n        </div>\n\n\n        <div *ngIf=\"isMobile && tasks.length > 0\">\n            <div *ngFor=\"let task of tasks; let index = index; \"\n                 [ngClass]=\"{'completed': task.completed}\">\n                <div (click)=\"$event.stopPropagation(); openEditTaskDialog(task)\"\n                     [ngClass]=\"{'background-completed': task.completed}\"\n                     class=\"card card-mobile\">\n                    <div [ngClass]=\"{'background-completed': task.completed}\"\n                         [style.background-color]=\"getPriorityColor(task)\"\n                         class=\"mobile-priority-top\">\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"mobile-title-inner  col-9 col-md-10 align-top\">\n                            <div [class.completed]=\"task.completed\" class=\"mobile-title\">{{task.title}}</div>\n                        </div>\n                        <div class=\"col-2 col-md-1 align-top mobile-check text-right\">\n                            <button class=\"nowidth\" (click)=\"$event.stopPropagation(); onToggleStatus(task)\" *ngIf=\"!task.completed\"\n                                    mat-icon-button>\n                                <mat-icon (click)=\"$event.stopPropagation(); onToggleStatus(task)\"\n                                          class=\"check-icon-notcompleted\">\n                                    check_circle_outline\n                                </mat-icon>\n                            </button>\n                            <button class=\"nowidth\" (click)=\"$event.stopPropagation(); onToggleStatus(task)\" *ngIf=\"task.completed\"\n                                    mat-icon-button>\n                                <mat-icon class=\"check-icon-completed\">check_circle</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"mobile-info-inner  col-12 align-top\">\n                            <div [ngClass]=\"{'completed': task.completed}\"\n                                 class=\"mobile-category\">\n                                <p [ngClass]=\"{'category': !task.completed && task.category}\">  {{task.category ? task.category.title : 'Без категории'}} </p>\n                            </div>\n                            <div *ngIf=\"task.priority\" class=\"mobile-priority\">\n                                <p [ngClass]=\"{'priority': !task.completed, 'completed': task.completed}\"\n                                   [style.background-color]=\"getMobilePriorityBgColor(task)\">  {{task.priority.title}} </p>\n                            </div>\n                            <div [ngClass]=\"{'completed': task.completed}\" class=\"mobile-date\">\n                                {{task.date | taskDate}}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *ngIf=\"isMobile && tasks.length === 0\">\n            <p class=\"not-found\">Ничего не найдено</p>\n        </div>\n    </div>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","\r\nimport {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch((err) => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}